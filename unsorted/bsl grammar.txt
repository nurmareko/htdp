def-expr	 	=	 	definition
 	 	|	 	expr
 	 	|	 	test-case
 	 	 	 	 
  definition	 	=	 	(define (name variable variable ...) expr)
 	 	|	 	(define name expr)
 	 	|	 	(define-struct name [name ...])
 	 	 	 	 
  expr	 	=	 	(name expr expr ...)
 	 	|	 	(cond [expr expr] ... [expr expr])
 	 	|	 	(cond [expr expr] ... [else expr])
 	 	|	 	(and expr expr expr ...)
 	 	|	 	(or expr expr expr ...)
 	 	|	 	name
 	 	|	 	number
 	 	|	 	string
 	 	|	 	image
 	 	 	 	 
  test-case	 	=	 	(check-expect expr expr)
 	 	|	 	(check-within expr expr expr)
 	 	|	 	(check-member-of expr expr ...)
 	 	|	 	(check-range expr expr expr)
 	 	|	 	(check-error expr)
 	 	|	 	(check-random expr expr)
 	 	|	 	(check-satisfied expr name)


				BSL, full grammar